<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sP1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
vy=0
xv=0
grv=0.5
doublejump = false
jump = false
P1Punch = false
punched = false
global.P1Percent = 0
P1Lives = 3
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///X Direction

//Getting Hit
if punched {
    x += xv
}
//Knockback Direction
if xv &gt; 0 {
    xv--   
}
else if xv &lt; 0 {
    xv++
}
//Punch End
if xv = 0 {
    punched = false
}

vx = 0

//Move Right
if keyboard_check(ord('D')) {
    image_xscale =1
    vx+=6
}

// Move Left
if keyboard_check(ord('A')) {
    image_xscale = -1
    vx-=6
}

vx+=xv


if !place_meeting(x+vx, y, oWall)
  x+=vx
else {
   while( !place_meeting(x+sign(vx),y,oWall) )
     x+=sign(vx)  
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Y Direction

//Gravity
if !place_meeting(x, y+1, oGrass) {
    vy+= grv
}
else {
    vy=0
}

//Jump Reset
if place_meeting(x, y+1, oGrass) {
    jump = true
    doublejump = true        
}

//Jump off Ground
if keyboard_check_pressed(ord('W')) {
   if place_meeting(x, y+1, oGrass)  {
        vy = -10
        jump = false
        doublejump= true
    }
    //First Jump
    else if jump {
        vy=-10
        jump = false
    }
    //Second Jump
    else if doublejump {
        vy=-10
        doublejump = false
    }
}


//Fall
if !place_meeting(x, y+vy, oGrass) {
    if keyboard_check(vk_down) {
        y+=vy+10
    }
    else {
        y+=vy
    }
} 

else {
    while(!place_meeting(x, y+sign(vy), oGrass)) {
        y+=sign(vy)
    }
    vy = 0
}
//Bump Head
if place_meeting(x, y-4, oWall) {
    vy = 0 
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Punch
if keyboard_check(vk_space) {
    sprite_index = sP1Punch
    P1Punch = true
}

if P1Punch {
    if place_meeting(x, y, oP2) {
    global.P2Percent +=10
        if image_xscale = 1 {
            with oP2 { 
                xv = 10 + (global.P2Percent*.1)
                punched = true
            }
        }else if image_xscale = -1{
                with oP2 {
                    xv = -10 -(global.P2Percent*.1)
                    punched = true
                }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = sP1
P1Punch = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>P1Lives--
global.P1Percent = 0
x = 320
y = 416
vy = 0
if P1Lives = 0 {
    game_restart()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
draw_text(384,576,"Player1%: " + string(global.P1Percent))
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
